<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- 解决Spring MVC ResponseBody乱码问题 -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<util:list>
				<beans:bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<beans:property name="supportedMediaTypes">
						<util:list>
							<beans:value>text/html;charset=UTF-8</beans:value>
							<beans:value>text/plain;charset=UTF-8</beans:value>
							<beans:value>application/json;charset=UTF-8</beans:value>
						</util:list>
					</beans:property>
				</beans:bean>
				<beans:bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
			</util:list>
		</beans:property>
	</beans:bean>

	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/assets/**" location="/assets/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<beans:property name="prefix" value="/WEB-INF/templates/" /> <beans:property 
		name="suffix" value=".jsp" /> </beans:bean> -->

	<!-- Velocity Config -->
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<beans:property name="cache" value="true" />
		<beans:property name="prefix" value="" />
		<beans:property name="suffix" value=".vm" />
		<beans:property name="contentType" value="text/html;charset=UTF-8" />
	</beans:bean>
	<beans:bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<beans:property name="resourceLoaderPath" value="/WEB-INF/templates/" />
		<beans:property name="velocityProperties">
			<beans:props>
				<beans:prop key="input.encoding">utf-8</beans:prop>
				<beans:prop key="output.encoding">utf-8</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload 
		package -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />

</beans:beans>